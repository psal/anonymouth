package edu.drexel.psal.jstylo.eventDrivers;

import com.jgaap.eventDrivers.NaiveWordEventDriver;
import com.jgaap.generics.*;

public class EventsCounterEventDriver extends SingleNumericEventDriver {

	/* ======
	 * fields
	 * ======
	 */
	
	/**
	 * Event driver to be used for extracting events to be counted.
	 */
	private EventDriver underlyingEvents;
	
	
	/* ==================
	 * overriding methods
	 * ==================
	 */
	
	public String displayName() {
		return "Event counter";
	}

	public String tooltipText() {
		return "The event frequency of an underlying event driver.";
	}

	public boolean showInGUI() {
		return false;
	}

	/**
	 * Extracts the total number of events generated by the underlying event driver.
	 */
	public double getValue(Document doc) throws EventGenerationException {
		String param;
		if (underlyingEvents == null) {
			param = getParameter("underlyingEvents");
			try {
				underlyingEvents = (EventDriver) Class.forName(param).newInstance();
			} catch (Exception e) {
				underlyingEvents = new NaiveWordEventDriver();
			}
		}
		
		return underlyingEvents.createEventSet(doc).size(); 
	}
	
	public EventDriver getUnderlyingEvents() {
		return underlyingEvents;
	}

	public void setUnderlyingEvents(EventDriver underlyingEvents) {
		this.underlyingEvents = underlyingEvents;
	}
}
